// ASTI.K ‚Äî Telegram-–±–æ—Ç —Å –ò–ò (Telegraf + OpenAI v4). Render-ready.
const { Telegraf, Markup } = require("telegraf");
const express = require("express");
const OpenAI = require("openai");

// === ENV ===
const BOT_TOKEN = process.env.BOT_TOKEN;
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;
if (!BOT_TOKEN || !OPENAI_API_KEY) {
  console.error("ENV missing: BOT_TOKEN or OPENAI_API_KEY");
  process.exit(1);
}

// === Init ===
const bot = new Telegraf(BOT_TOKEN);
const app = express();
const ai = new OpenAI({ apiKey: OPENAI_API_KEY });

// –°—Ç–µ–π—Ç –Ω–∞ –ø–∞–º—è—Ç—å –¥–∏–∞–ª–æ–≥–∞ (–æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ–π)
const S = {};
const getS = (id) => (S[id] ??= { mode: null, step: 0, data: {} });
const reset = (id) => (S[id] = { mode: null, step: 0, data: {} });

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –ò–ò
async function askAI(userMsg, sys = "") {
  try {
    const r = await ai.chat.completions.create({
      model: "gpt-4o-mini",
      temperature: 0.7,
      max_tokens: 600,
      messages: [
        {
          role: "system",
          content:
            (sys || "") +
            "\n–¢—ã ‚Äî ASTI.K, –¥–µ—Ä–∑–∫–∏–π, —á–µ—Å—Ç–Ω—ã–π —Å—Ç–∏–ª–∏—Å—Ç –ø–æ–∫–æ–ª–µ–Ω–∏—è Z. " +
            "–ì–æ–≤–æ—Ä–∏—à—å –∫—Ä–∞—Ç–∫–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ, –ø–æ –¥–µ–ª—É; –±–µ–∑ –ª–µ—Å—Ç–∏ –∏ –≤–æ–¥—ã. " +
            "–§–æ–∫—É—Å: —Ñ–∏–≥—É—Ä–∞/—Å–∏–ª—É—ç—Ç, —Ü–µ–ª–∏, –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è, —Ç–∫–∞–Ω–∏, —Ñ–æ—Ä–º—É–ª—ã –æ–±—Ä–∞–∑–æ–≤, –∞–Ω—Ç–∏-—Å–æ–≤–µ—Ç—ã. " +
            "–§–æ—Ä–º–∞—Ç–∏—Ä—É–π –ø—É–Ω–∫—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ—Ä–æ—Ç–∫–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏. HTML —Ä–∞–∑—Ä–µ—à—ë–Ω: <b>, <i>, —Å–ø–∏—Å–∫–∏."
        },
        { role: "user", content: userMsg }
      ]
    });
    return r.choices?.[0]?.message?.content?.trim() || "‚Ä¶";
  } catch (e) {
    console.error("AI error:", e.message);
    return "–°–µ—Ä–≤–µ—Ä –ò–ò –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ.";
  }
}

// === Keep-alive –¥–ª—è Render ===
app.get("/", (_, res) => res.send("ASTI.K is live"));
app.listen(process.env.PORT || 10000, () => console.log("Server running"));

// === –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π ¬´–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞¬ª ===
bot.start(async (ctx) => {
  reset(ctx.from.id);
  await ctx.replyWithHTML(
    "üö® <b>–°—Ç–æ–ø. –¢—ã –≤ –∑–æ–Ω–µ ASTI.K.</b>\n" +
      "–ó–¥–µ—Å—å –Ω–µ—Ç —Ñ–∞–ª—å—à–∏–≤—ã—Ö –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤ –∏ —Ä–æ–∑–æ–≤—ã—Ö —Å–æ–ø–ª–µ–π.\n\n" +
      "–Ø ‚Äî –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π:\n" +
      "üí£ –†–∞–∑–Ω–µ—Å—ë—Ç —Ç–≤–æ–∏ –º–æ–¥–Ω—ã–µ –∏–ª–ª—é–∑–∏–∏.\n" +
      "ü©∏ –ü–æ–∫–∞–∂–µ—Ç, –ø–æ—á–µ–º—É —Ç–≤–æ–∏ –≤–µ—â–∏ —Ä–µ–∞–ª—å–Ω–æ ¬´—Å—Ç–∞—Ä—è—Ç¬ª –∏–ª–∏ ¬´–¥–µ—à–µ–≤—è—Ç¬ª.\n" +
      "‚ö° –°–∫–∞–∂–µ—Ç, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –≤—ã–≥–ª—è–¥–µ—Ç—å –¥–æ—Ä–æ–∂–µ –∏ —É–≤–µ—Ä–µ–Ω–Ω–µ–µ.\n\n" +
      "üß© –ù–∞—á–Ω—ë–º —Å <b>–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Ñ–∏–≥—É—Ä—ã</b>.\n" +
      "–≠—Ç–æ –Ω–µ —Ç–µ—Å—Ç –∏–∑ –∂—É—Ä–Ω–∞–ª–∞ ‚Äî —ç—Ç–æ –±—ã—Å—Ç—Ä—ã–π —Ä–∞–∑–±–æ—Ä: –≥–¥–µ —É —Ç–µ–±—è +100 –∫ —Å—Ç–∏–ª—é, –∞ –≥–¥–µ üîª –º–∏–Ω—É—Å.\n\n" +
      "üëâ –ì–æ—Ç–æ–≤–∞ –∫ —á–µ—Å—Ç–Ω–æ–º—É –∑–µ—Ä–∫–∞–ª—É?",
    Markup.inlineKeyboard([[Markup.button.callback("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", "diag_start")]])
  );
});

// === –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ (3 —à–∞–≥–∞) ‚Üí –ò–ò-—Ä–µ–∑—é–º–µ ===
bot.action("diag_start", async (ctx) => {
  const st = getS(ctx.from.id);
  st.mode = "diag";
  st.step = 1;
  st.data = {};
  await ctx.answerCbQuery();
  await ctx.reply("1/3 üëâ –ù–∞–ø–∏—à–∏: <b>—Ä–æ—Å—Ç</b> (—Å–º) –∏ <b>–≤–µ—Å</b> (–∫–≥). –ü—Ä–∏–º–µ—Ä: 168 / 62", { parse_mode: "HTML" });
});

bot.on("text", async (ctx) => {
  const st = getS(ctx.from.id);
  const t = (ctx.message.text || "").trim();

  if (st.mode === "diag") {
    if (st.step === 1) {
      st.data.height_weight = t;
      st.step = 2;
      return ctx.reply("2/3 üëâ –¢–≤–æ–π <b>—Ä–∞–∑–º–µ—Ä –æ–¥–µ–∂–¥—ã</b> (–≤–µ—Ä—Ö/–Ω–∏–∑, –µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è). –ü—Ä–∏–º–µ—Ä: 44-46 / 46", { parse_mode: "HTML" });
    }
    if (st.step === 2) {
      st.data.size = t;
      st.step = 3;
      return ctx.reply(
        "3/3 üëâ –ö—É–¥–∞ —Ç–µ–±–µ —á–∞—â–µ –≤—Å–µ–≥–æ –Ω—É–∂–Ω—ã –æ–±—Ä–∞–∑—ã? (–æ—Ñ–∏—Å / —Å–≤–∏–¥–∞–Ω–∏—è / –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ / –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è). –ò –∫–∞–∫–æ–π –≤–∞–π–±? (–º–∏–Ω–∏–º–∞–ª–∏–∑–º / –¥–µ—Ä–∑–∫–æ / –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω–æ / —Å–ø–æ—Ä—Ç-—à–∏–∫).",
      );
    }
    if (st.step === 3) {
      st.data.context_vibe = t;
      st.mode = null;
      st.step = 0;

      const prompt =
        –°–æ–±–µ—Ä–∏ —á–µ—Å—Ç–Ω–æ–µ —Ä–µ–∑—é–º–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Ñ–∏–≥—É—Ä—ã –∏ —Å—Ç–∏–ª–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.\n +
        –î–∞–Ω–æ:\n- —Ä–æ—Å—Ç/–≤–µ—Å: ${st.data.height_weight}\n- —Ä–∞–∑–º–µ—Ä: ${st.data.size}\n- –∫–æ–Ω—Ç–µ–∫—Å—Ç/–≤–∞–π–±: ${st.data.context_vibe}\n\n +
        –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ (HTML):\n<b>–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã</b> ‚Äî 3 –ø—É–Ω–∫—Ç–∞\n<b>–†–∏—Å–∫-–∑–æ–Ω—ã –∏ –∫–∞–∫ –Ω–µ–π—Ç—Ä–∞–ª–∏–∑–æ–≤–∞—Ç—å</b> ‚Äî 3 –ø—É–Ω–∫—Ç–∞\n<b>–ë—ã—Å—Ç—Ä—ã–µ —Ñ–æ—Ä–º—É–ª—ã –æ–±—Ä–∞–∑–æ–≤</b> ‚Äî 3 —à—Ç—É–∫–∏\n<b>–ê–Ω—Ç–∏-—Å–æ–≤–µ—Ç—ã</b> ‚Äî 2 —à—Ç—É–∫–∏\n +
        –ö–æ—Ä–æ—Ç–∫–æ, –ø–æ –¥–µ–ª—É.;

      const aiText = await askAI(prompt);
      await ctx.

–ö—Ä–∏—Å—Ç–∏–Ω–∞ –ê—Å—Ç–∞–Ω–∏–Ω–∞, [19.08.2025 20:59]
replyWithHTML(aiText);

      // –•—É–∫ –Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ
      return ctx.replyWithHTML(
        "–•–æ—á–µ—à—å –≥–ª—É–±–∂–µ: <b>–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è —Å—Ç–∏–ª—è</b>, <b>—Ç–∫–∞–Ω–∏</b>, <b>–≤–æ–ª–æ—Å—ã</b> –∏ –¥–∞–∂–µ <b>–±–µ–ª—å—ë</b>?\n" +
          "–ù–∞–ø–∏—à–∏, —á—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, ‚Äî —Ä–∞–∑–±–µ—Ä—ë–º —Ç–æ—á–µ—á–Ω–æ.",
      );
    }
  }

  // –ï—Å–ª–∏ –Ω–µ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏ ‚Äî —Å–≤–æ–±–æ–¥–Ω—ã–π –ò–ò-—Å–æ–≤–µ—Ç –ø–æ —Å—Ç–∏–ª—é
  const aiText = await askAI(
    –ö–ª–∏–µ–Ω—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç/–ø–∏—à–µ—Ç: "${t}". –î–∞–π –æ—Ç–≤–µ—Ç —Å—Ç–∏–ª–∏—Å—Ç–∞ —Å –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–æ–π: 3‚Äì5 —Ç–µ–∑–∏—Å–æ–≤ –∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ "–ø–æ—á–µ–º—É —Ä–∞–±–æ—Ç–∞–µ—Ç".
  );
  return ctx.replyWithHTML(aiText);
});

// –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å—Ç–æ–ø
process.once("SIGINT", () => bot.stop("SIGINT"));
process.once("SIGTERM", () => bot.stop("SIGTERM"));
bot.launch().then(() => console.log("ASTI.K bot launched"));
